name: SonarCloud
on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Cache Report Generator
        id: cache-report-generator
        uses: actions/cache@v3
        with:
          path: .\.reportgenerator
          key: ${{ runner.os }}-report-generator
          restore-keys: ${{ runner.os }}-report-generator
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Install Report Generator
        if: steps.cache-report-generator.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.reportgenerator -ItemType Directory
          dotnet tool update dotnet-reportgenerator-globaltool --tool-path .\.reportgenerator
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"lodrial_AspNetCore.Hosting.ContentSecurityPolicies" /o:"lodrial" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build AspNetCore.Hosting.ContentSecurityPolicies.sln -c Release
          dotnet test --collect:"XPlat Code Coverage" --logger "trx" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover -c Release
          .\.reportgenerator\reportgenerator "-reports:.\test\AspNetCore.Hosting.ContentSecurityPolicies.Test\TestResults\*\coverage.cobertura.xml" "-targetdir:sonarqubecoverage" "-reporttypes:SonarQube" "-classfilters:+*;-*.Pages_Error"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
